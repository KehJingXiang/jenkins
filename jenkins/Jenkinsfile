//CODE_CHANGES = getGitChanges()

def gv

pipeline {
    
    // Define the agent to execute the stages
    agent any

    // Define build tools needed (must be installed in jenkins server)
    tools {
        maven 'Maven'
    }

    parameters {
        string(name: 'VERSION', defaultValue: '', description: 'version to deploy on prod')
        choice(name: 'VERSION', choices: ['1.1.0', '1.2.0', '1.3.0'], description: '')
        booleanParam(name: 'executeTests', defaultValue: true, description: '')
    }

    // Define environmental variable for all stages
    environment {
        NEW_VERSION = '1.3.0'
        // Access credentials defined in jenkins server through credentials id
        SERVER_CREDENTIALS = credentials('server-credentials')
    }

    stages {
        stage ("init") {
            steps {
                script {
                    gv = load "script.groovy"
                }
            }
        }    
        stage("build") {
            // Conditionals to execute steps
            // when {
            //     expression {
            //         BRANCH_NAME = 'dev' && CODE_CHANGES == true
            //     }
            // }
            steps {
                script {
                    gv.buildApp(NEW_VERSION)
                }
            }
        }

        stage("test") {
            when {
                expression {
                    // Execute test if executeTests is true
                    params.executeTests
                }
            }
            steps {
                script {
                    gv.testApp()
                }
            }
        }

        stage("deploy") {
            steps {
                script {
                    gv.deployApp()
                }
            }
        }

    }

    // Execute logic after all stages executed
    post {
        // No matter the stages output status
        always {
            // Maybe notify the team the output
            echo 'Build done'
        }

        // Only when the stages succeeded
        success {
            echo 'Build success'
        }

        // Only when the stages failed
        failure {
            echo 'Build failed'
        }
    }
}